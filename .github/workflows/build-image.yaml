name: Build docker image

on:
  workflow_call: {}

defaults:
  run:
    shell: bash
    working-directory: .

jobs:
  build-image-arm64:
    name: Build docker image (arm64)
    runs-on: self-hosted

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: create temp image metadata
        run: |
          echo "image_name=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV
          echo "image_tag=${GITHUB_SHA::9}" >> $GITHUB_ENV
      - uses: docker/build-push-action@v4
        with:
          context: .
          file: ./.docker/Dockerfile.web
          platforms: linux/arm64
          push: true
          provenance: false
          sbom: false
          tags: ghcr.io/${{ env.image_name }}:${{ env.image_tag }}-arm64
          cache-from: type=gha,scope=voxscape-site-arm
          cache-to: type=gha,mode=max,scope=voxscape-site-arm

  build-image-x64:
    name: Build docker image (x64)
    runs-on: ubuntu-22.04

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: create temp image metadata
        run: |
          echo "image_name=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV
          echo "image_tag=${GITHUB_SHA::9}" >> $GITHUB_ENV
      - uses: docker/build-push-action@v4
        with:
          context: .
          file: ./.docker/Dockerfile.web
          platforms: linux/amd64
          push: true
          provenance: false
          sbom: false
          tags: ghcr.io/${{ env.image_name }}:${{ env.image_tag }}-x64
          cache-from: type=gha,scope=voxscape-site-x64
          cache-to: type=gha,mode=max,scope=voxscape-site-x64
  merge-manifest:
    needs: [build-image-arm64, build-image-x64]
    runs-on: ubuntu-22.04
    steps:
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: create temp image metadata
        run: |
          echo "image_name=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV
          echo "image_tag=${GITHUB_SHA::9}" >> $GITHUB_ENV
      - uses: docker/metadata-action@v4
        id: docker_meta
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch,enable=${{ github.ref == format('refs/heads/{0}', 'main') }},suffix={{sha}}
            type=ref,event=branch,enable=${{ github.ref == format('refs/heads/{0}', 'develop') }},suffix={{sha}}
            type=ref,event=pr
            type=sha
      - run: |
          set -uex
          for i in $IMAGE_TAGS; do
            docker manifest create $i \
              ghcr.io/${{ env.image_name }}:${{ env.image_tag }}-x64 \
              ghcr.io/${{ env.image_name }}:${{ env.image_tag }}-arm64
            docker manifest push $i
          done
        env:
          IMAGE_TAGS: ${{ steps.docker_meta.outputs.tags }}
          # IMAGE_LABELS: ${{ steps.docker_meta.outputs.labels }} # no idea how to add them to manifest, maybe unnecessary
