// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// next-auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

// next-auth
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

// next-auth
model User {
  id            String           @id @default(cuid())
  name          String?
  email         String?          @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  // ours
  models        VoxelModel[]
  modelViews    VoxelModelView[]
  updatedAt     DateTime         @updatedAt
  createdAt     DateTime         @default(now())
}

// next-auth
model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model VoxelModel {
  id          Int              @id @default(autoincrement())
  ownerUserId String
  ownerUser   User             @relation(fields: [ownerUserId], references: [id])
  contentType String
  assetUrl    String
  isPrivate Boolean @default(false)
  modelViews  VoxelModelView[]
  // defaultViewId Int
  // defaultView   VoxelModelView @relation(fields: [defaultViewId], references: [id])
  updatedAt   DateTime         @updatedAt
  createdAt   DateTime         @default(now())

  @@index([ownerUserId])
}

model VoxelModelView {
  id              Int        @id @default(autoincrement())
  modelId         Int
  model           VoxelModel @relation(fields: [modelId], references: [id])
  ownerUserId     String
  ownerUser       User       @relation(fields: [ownerUserId], references: [id])
  previewImageUrl String
  isDefault       Boolean    @default(false)
  perspective     Json
  updatedAt       DateTime   @updatedAt
  createdAt       DateTime   @default(now())

  @@index([modelId])
  @@index([ownerUserId])
}
