openapi: 3.0.3
info:
  title: nuthatch
  version: '0.1'
paths:
  /authn/oauth1/{provider}:
    post:
      operationId: postAuthnOauth1Provider
      parameters:
      - name: provider
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth1LoginIntent'
        '400':
          description: client's bad in general
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: login required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '403':
          description: user identity known but action not permitted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '404':
          description: resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '501':
          description: not implemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotImplemented'
        default:
          description: server's bad in general
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
  /authn/oauth1/verify:
    post:
      operationId: postAuthnOauth1Verify
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuth1TempCred'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '400':
          description: client's bad in general
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: login required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '403':
          description: user identity known but action not permitted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '404':
          description: resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '501':
          description: not implemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotImplemented'
        default:
          description: server's bad in general
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
  /authn/password:
    post:
      operationId: postAuthnPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailLoginCred'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '400':
          description: client's bad in general
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: login required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '403':
          description: user identity known but action not permitted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '404':
          description: resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '501':
          description: not implemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotImplemented'
        default:
          description: server's bad in general
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
components:
  schemas:
    BadRequest:
      required:
      - message
      type: object
      properties:
        message:
          type: string
    EmailLoginCred:
      required:
      - email
      - initialPassword
      type: object
      properties:
        email:
          type: string
        initialPassword:
          type: string
    EmailSignUpRequest:
      required:
      - email
      - initialPassword
      type: object
      properties:
        email:
          type: string
        initialPassword:
          type: string
    Forbidden:
      required:
      - message
      type: object
      properties:
        message:
          type: string
    NotFound:
      required:
      - message
      type: object
      properties:
        message:
          type: string
    NotImplemented:
      required:
      - message
      type: object
      properties:
        message:
          type: string
    OAuth1LoginIntent:
      required:
      - externalUrl
      type: object
      properties:
        externalUrl:
          type: string
    OAuth1TempCred:
      required:
      - provider
      - oauthToken
      - oauthVerifier
      type: object
      properties:
        provider:
          type: string
        oauthToken:
          type: string
        oauthVerifier:
          type: string
    ServerError:
      required:
      - message
      type: object
      properties:
        message:
          type: string
    Unauthorized:
      required:
      - message
      type: object
      properties:
        message:
          type: string
    UserProfile:
      required:
      - isActivated
      type: object
      properties:
        email:
          type: string
        isActivated:
          type: boolean
